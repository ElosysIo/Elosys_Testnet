# we are using separate workflow because CI producing test binaries with CPPFLAGS=-DTESTMODE

name: Elosys cli build - Ubuntu 20.04


on:
  push:
    branches:
    - master
    - beta


jobs:

  linux-build:
    name: Linux Build
    # using there as old release as possible with GHA worker to provide better compatibility
    runs-on: ubuntu-20.04
    steps:

      - name: Extract branch name
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_OUTPUT"
        id: extract_branch

      - name: Shortify commit sha
        shell: bash
        run: echo "sha_short=$(echo ${GITHUB_SHA::7})" >> "$GITHUB_OUTPUT"
        id: shortify_commit

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install deps (Linux)
        run: |
          sudo apt-get update  # prevents repo404 errors on apt-remove below
          sudo apt-get upgrade -y
          sudo apt-get install mingw-w64 build-essential pkg-config libc6-dev m4 g++-multilib autoconf libtool libncurses-dev unzip git python zlib1g-dev wget bsdmainutils automake libboost-all-dev libssl-dev libprotobuf-dev protobuf-compiler libqrencode-dev libdb++-dev ntp ntpdate nano software-properties-common curl libevent-dev libcurl4-gnutls-dev cmake clang libsodium-dev -y
      - name: Build (Linux)
        if: runner.os == 'Linux'
        run: |
          ./zcutil/build.sh -j$(nproc)
          zip --junk-paths elosys-linux src/elosysd src/elosys-cli
      - name: Upload elosys-linux.zip as artifact
        uses: actions/upload-artifact@v1
        with:
          name: elosys-linux
          path: ./elosys-linux.zip
